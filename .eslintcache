[{"/Users/eugene/Project/bigDance-react/src/index.tsx":"1","/Users/eugene/Project/bigDance-react/src/App.tsx":"2","/Users/eugene/Project/bigDance-react/src/Providers/RootStoreProvider.tsx":"3","/Users/eugene/Project/bigDance-react/src/Components/Layout/MainLayout/MainLayout.tsx":"4","/Users/eugene/Project/bigDance-react/src/stores/RootStore.ts":"5","/Users/eugene/Project/bigDance-react/src/routes/contentRoutes.tsx":"6","/Users/eugene/Project/bigDance-react/src/Components/Layout/Header/Header.tsx":"7","/Users/eugene/Project/bigDance-react/src/stores/authStore/AuthStore.ts":"8","/Users/eugene/Project/bigDance-react/src/stores/authStore/service.ts":"9","/Users/eugene/Project/bigDance-react/src/routes/routes.ts":"10","/Users/eugene/Project/bigDance-react/src/utils/constants.ts":"11","/Users/eugene/Project/bigDance-react/src/Services/config.ts":"12","/Users/eugene/Project/bigDance-react/src/Services/api.ts":"13","/Users/eugene/Project/bigDance-react/src/stores/Form/index.ts":"14","/Users/eugene/Project/bigDance-react/src/Pages/WelcomePage/WelcomePage.tsx":"15","/Users/eugene/Project/bigDance-react/src/Pages/Login/Login.tsx":"16","/Users/eugene/Project/bigDance-react/src/stores/Form/validators.ts":"17","/Users/eugene/Project/bigDance-react/src/stores/Form/FormStore.ts":"18","/Users/eugene/Project/bigDance-react/src/utils/notification.tsx":"19","/Users/eugene/Project/bigDance-react/src/Components/Common/BaseInput/BaseInput.tsx":"20","/Users/eugene/Project/bigDance-react/src/Components/Common/BaseButton/BaseButton.tsx":"21","/Users/eugene/Project/bigDance-react/src/Pages/SettingsPage/SettingsPage.tsx":"22","/Users/eugene/Project/bigDance-react/src/stores/AuthStore/AuthStore.ts":"23","/Users/eugene/Project/bigDance-react/src/stores/AuthStore/service.ts":"24","/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/SettingsStore.ts":"25","/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/service.ts":"26","/Users/eugene/Project/bigDance-react/src/utils/helpers.ts":"27","/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/forms.ts":"28","/Users/eugene/Project/bigDance-react/src/Components/Common/BaseTabs/BaseTabs.tsx":"29","/Users/eugene/Project/bigDance-react/src/Pages/SettingsPage/components/CardsVenue/CardsVenue.tsx":"30","/Users/eugene/Project/bigDance-react/src/Components/Layout/NotificationLayout/NotificationLayout.tsx":"31"},{"size":208,"mtime":1616881090949,"results":"32","hashOfConfig":"33"},{"size":402,"mtime":1618001835279,"results":"34","hashOfConfig":"33"},{"size":690,"mtime":1618852587671,"results":"35","hashOfConfig":"33"},{"size":945,"mtime":1619762618332,"results":"36","hashOfConfig":"33"},{"size":533,"mtime":1618952752588,"results":"37","hashOfConfig":"33"},{"size":1709,"mtime":1618852587671,"results":"38","hashOfConfig":"33"},{"size":1748,"mtime":1618947365144,"results":"39","hashOfConfig":"33"},{"size":2069,"mtime":1618949166545,"results":"40","hashOfConfig":"33"},{"size":303,"mtime":1618948624830,"results":"41","hashOfConfig":"33"},{"size":906,"mtime":1618864306503,"results":"42","hashOfConfig":"33"},{"size":38,"mtime":1618433287825,"results":"43","hashOfConfig":"33"},{"size":1230,"mtime":1619762899419,"results":"44","hashOfConfig":"33"},{"size":785,"mtime":1619072512627,"results":"45","hashOfConfig":"33"},{"size":59,"mtime":1615066354514,"results":"46","hashOfConfig":"33"},{"size":149,"mtime":1616872054649,"results":"47","hashOfConfig":"33"},{"size":1780,"mtime":1618951794348,"results":"48","hashOfConfig":"33"},{"size":3822,"mtime":1616932526698,"results":"49","hashOfConfig":"33"},{"size":9524,"mtime":1618852587671,"results":"50","hashOfConfig":"33"},{"size":517,"mtime":1619762737498,"results":"51","hashOfConfig":"33"},{"size":2427,"mtime":1618852587671,"results":"52","hashOfConfig":"33"},{"size":1400,"mtime":1618852587671,"results":"53","hashOfConfig":"33"},{"size":868,"mtime":1619730104610,"results":"54","hashOfConfig":"33"},{"size":2180,"mtime":1618951700089,"results":"55","hashOfConfig":"33"},{"size":394,"mtime":1619724445796,"results":"56","hashOfConfig":"33"},{"size":1118,"mtime":1619725097066,"results":"57","hashOfConfig":"33"},{"size":298,"mtime":1618952612453,"results":"58","hashOfConfig":"33"},{"size":211,"mtime":1619072160893,"results":"59","hashOfConfig":"33"},{"size":845,"mtime":1619725014587,"results":"60","hashOfConfig":"33"},{"size":1415,"mtime":1619730294074,"results":"61","hashOfConfig":"33"},{"size":2844,"mtime":1619765212742,"results":"62","hashOfConfig":"33"},{"size":244,"mtime":1619762639827,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"nj7n3f",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/eugene/Project/bigDance-react/src/index.tsx",[],["138","139","140","141","142"],"/Users/eugene/Project/bigDance-react/src/App.tsx",[],"/Users/eugene/Project/bigDance-react/src/Providers/RootStoreProvider.tsx",["143","144","145"],"import { useLocalStore } from \"mobx-react-lite\";\nimport React, { createContext, useContext } from \"react\";\nimport RootStore from \"stores/RootStore\";\n\ntype StoreContextType = {\n    rootStore: IRootStore;\n};\n\nconst StoreContext = createContext<StoreContextType | null>(null);\n\nexport const StoreProvider = ({ children }) => {\n    const store = useLocalStore(() => ({ rootStore: RootStore }));\n    return (\n        <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n    );\n};\n\nexport const useStore = () => {\n    const store = useContext(StoreContext);\n    if (!store) {\n        throw new Error(\"useStore must be used within a StoreProvider.\");\n    }\n    return store;\n};\n","/Users/eugene/Project/bigDance-react/src/Components/Layout/MainLayout/MainLayout.tsx",["146"],"import Header from \"Components/Layout/Header/Header\";\nimport Notification from \"Components/Layout/NotificationLayout/NotificationLayout\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"Providers/RootStoreProvider\";\nimport React, { useEffect } from \"react\";\nimport { getContentRoutes } from \"routes/contentRoutes\";\n\nimport styles from \"./mainLayout.module.scss\";\n\nconst MainLayout: React.FC = observer(() => {\n    const { rootStore } = useStore();\n    const { isLogined } = rootStore.authStore;\n\n    useEffect(() => {\n        if (isLogined) {\n            rootStore.initStore();\n        }\n    }, [isLogined]);\n\n    return (\n        <>\n            <div className={styles.wrap}>\n                <Header />\n                <main className={styles.main}>\n                    {getContentRoutes(isLogined)}\n                </main>\n            </div>\n            <Notification />\n        </>\n    );\n});\n\nexport default MainLayout;\n","/Users/eugene/Project/bigDance-react/src/stores/RootStore.ts",[],"/Users/eugene/Project/bigDance-react/src/routes/contentRoutes.tsx",["147","148","149","150","151","152"],"import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes/routes\";\n\nconst renderMergedProps = (Component: React.ComponentType, ...rest: any[]) => {\n    const allProps = Object.assign({}, ...rest);\n    return <Component {...allProps} />;\n};\n\nconst BasicRoute = ({ component, ...rest }: any) => {\n    return (\n        <Route\n            {...rest}\n            render={(routeProps) => {\n                return renderMergedProps(component, routeProps, rest);\n            }}\n        />\n    );\n};\n\nconst PrivateRoute = ({\n    component,\n    authed = false,\n    redirectTo,\n    ...rest\n}: any) => {\n    return (\n        <Route\n            {...rest}\n            render={(routeProps) => {\n                return authed ? (\n                    renderMergedProps(component, routeProps, rest)\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: redirectTo,\n                            state: { from: routeProps.location },\n                        }}\n                    />\n                );\n            }}\n        />\n    );\n};\n\nexport const getContentRoutes = (isLogined: boolean): JSX.Element => {\n    return (\n        <Switch>\n            {Object.values(routes).map((route, i) => {\n                return route.meta!.requiresAuth ? (\n                    <PrivateRoute\n                        {...route}\n                        authed={isLogined}\n                        redirectTo={routes.login.path}\n                        key={i}\n                    />\n                ) : (\n                    <BasicRoute {...route} key={i} />\n                );\n            })}\n        </Switch>\n    );\n};\n","/Users/eugene/Project/bigDance-react/src/Components/Layout/Header/Header.tsx",["153","154"],"import AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { observer } from \"mobx-react-lite\";\nimport { useStore } from \"Providers/RootStoreProvider\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport routes from \"routes/routes\";\n\nimport styles from \"./header.module.scss\";\n\nconst Header: React.FC = observer(() => {\n    const router = useHistory();\n    const {\n        rootStore: {\n            authStore: { isLogined, isAdmin },\n        },\n    } = useStore();\n\n    return (\n        <AppBar position=\"fixed\">\n            <Toolbar>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                >\n                    <MenuIcon />\n                </IconButton>\n                <div className={styles.linkWrap}>\n                    {Object.values(routes)\n                        .filter(\n                            (item) =>\n                                item.meta.requiresAuth === isLogined ||\n                                item.meta.requiresAdmin === isAdmin\n                        )\n                        .map((item) => (\n                            <div\n                                className={styles.link}\n                                key={item.name}\n                                onClick={() => router.push(item.path)}\n                            >\n                                {item.name}\n                            </div>\n                        ))}\n                </div>\n            </Toolbar>\n        </AppBar>\n    );\n});\n\nexport default Header;\n","/Users/eugene/Project/bigDance-react/src/stores/authStore/AuthStore.ts",["155","156","157","158"],"/Users/eugene/Project/bigDance-react/src/stores/authStore/service.ts",[],"/Users/eugene/Project/bigDance-react/src/routes/routes.ts",[],"/Users/eugene/Project/bigDance-react/src/utils/constants.ts",[],"/Users/eugene/Project/bigDance-react/src/Services/config.ts",[],"/Users/eugene/Project/bigDance-react/src/Services/api.ts",["159","160","161","162","163","164","165"],"import { ApiResponse } from \"apisauce\";\n\nimport { api, handleFetch } from \"./config\";\n\nexport default class ApiService {\n    public static get<T>(\n        url: string,\n        request?: any,\n        isNotifySuccess = false\n    ): ResponseApi<T> {\n        return api\n            .get(url, request)\n            .then((response: ApiResponse<any>) => response.data)\n            .then((data) => handleFetch<T>(data, isNotifySuccess));\n    }\n\n    public static post<T>(\n        url: string,\n        body: any = {},\n        request?: any,\n        isNotifySuccess = true\n    ): ResponseApi<T> {\n        return api\n            .post(url, body, request)\n            .then((response: ApiResponse<any>) => response.data)\n            .then((data) => handleFetch<T>(data, isNotifySuccess));\n    }\n}\n","/Users/eugene/Project/bigDance-react/src/stores/Form/index.ts",[],"/Users/eugene/Project/bigDance-react/src/Pages/WelcomePage/WelcomePage.tsx",[],"/Users/eugene/Project/bigDance-react/src/Pages/Login/Login.tsx",[],"/Users/eugene/Project/bigDance-react/src/stores/Form/validators.ts",["166","167","168","169","170","171"],"import { Validator } from \"./types\";\n\nexport const custom = (func: Validator) => (value, fields) => {\n    return func(value, fields);\n};\n\nexport const required = (canBeZero = false): Validator => (value) => {\n    // eslint-disable-next-line\n    if (!value || (!canBeZero && value == 0)) {\n        return \"Поле обязательное\";\n    }\n};\n\nexport const alphanumeric = (): Validator => (value: string) => {\n    if (!/^[a-zA-Z0-9_]*$/.test(value)) {\n        return \"Только буквы и числа\";\n    }\n};\n\nexport const digits = (): Validator => (value: string) => {\n    if (!/^[0-9]*$/.test(value)) {\n        return \"Только числа\";\n    }\n};\n//\n// export const float = (): Validator => (value: string) => {\n//     if (!/^\\d+((\\.|,)\\d+)?$/.test(value)) {\n//         return i18n!.t(\"validators.float\") as string;\n//     }\n// };\n//\n// export const minValue = (min: number | string): Validator => (\n//     value: string\n// ) => {\n//     if (+value < +min) {\n//         return i18n!.t(\"validators.minValue\", { min }) as string;\n//     }\n// };\n//\n// export const maxValue = (max: number | string): Validator => (\n//     value: string\n// ) => {\n//     if (+value > +max) {\n//         return i18n!.t(\"validators.maxValue\", { max }) as string;\n//     }\n// };\n//\n// export const minLength = (min: number): Validator => (value) => {\n//     if (value.length < min) {\n//         return i18n!.t(\"validators.minLength\", { min }) as string;\n//     }\n// };\n//\n// export const maxLength = (max: number): Validator => (value) => {\n//     if (value && value.length > max) {\n//         return i18n!.t(\"validators.maxLength\", { max }) as string;\n//     }\n// };\n//\n// export const length = (length: number): Validator => (value) => {\n//     if (value.length !== length) {\n//         return i18n!.t(\"validators.length\", { length }) as string;\n//     }\n// };\n//\n// export const email = (): Validator => (value: string) => {\n//     if (\n//         !/^(([^<>()[\\]\\\\!`.,;:\\s@\"]+(\\.[^<>()[\\]\\\\!`.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i.test(\n//             value\n//         )\n//     ) {\n//         return i18n!.t(\"validators.email\") as string;\n//     }\n// };\n//\n// export const password = (): Validator => (value: string) => {\n//     if (\n//         !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[-+=.,;:'\"`(){}?!@#$%^<>&№*/~\\]\\\\]).{8,20}$/.test(\n//             value\n//         )\n//     ) {\n//         return i18n!.t(\"auth.register.password\") as string;\n//     }\n// };\n//\n// export const when = (condition: (value, fields) => any, func: Validator) => (\n//     value,\n//     fields\n// ) => {\n//     if (condition(value, fields)) {\n//         return func(value, fields);\n//     }\n// };\n//\n// export const sameAs = (field: string, translate?: () => string): Validator => (\n//     value?: string,\n//     fields?\n// ) => {\n//     if (value !== fields[field]) {\n//         return i18n!.t(\"validators.sameAs\", {\n//             label: typeof translate === \"function\" ? translate() : field,\n//         }) as string;\n//     }\n// };\n//\n// export const notSameAs = (\n//     field: string,\n//     translate?: () => string\n// ): Validator => (value?: string, fields?) => {\n//     if (value === fields[field]) {\n//         return i18n!.t(\"validators.notSameAs\", {\n//             label: typeof translate === \"function\" ? translate() : field,\n//         }) as string;\n//     }\n// };\n//\n// export const letters = (isShuftiPro = false): Validator => (value: string) => {\n//     if (isShuftiPro) {\n//         if (!/^[A-Za-z\\-\\s,.']*$/.test(value)) {\n//             return i18n!.t(\"validators.shuftiLetters\") as string;\n//         }\n//     } else if (!/^[A-Za-zА-Яа-яЁё\\-\\s]*$/.test(value)) {\n//         return i18n!.t(\"validators.letters\") as string;\n//     }\n// };\n","/Users/eugene/Project/bigDance-react/src/stores/Form/FormStore.ts",["172","173","174","175","176","177","178","179","180","181","182","183","184"],"import debounce from \"lodash/debounce\";\nimport { action, computed, makeObservable, observable } from \"mobx\";\n\nimport {\n    DefaultValues,\n    ErrorsState,\n    FieldsHash,\n    FieldsState,\n    FieldTypes,\n    IFormOptions,\n    IFormState,\n    ISubmitMeta,\n} from \"./types\";\n\nexport class FormStore<TFields = any> {\n    private readonly fields: FieldsHash<TFields>;\n\n    private readonly defaultValues: DefaultValues | undefined;\n\n    private readonly debouncedFieldValidators!: Hash<() => any>;\n\n    public onSubmit: (payload: any) => void;\n\n    @observable\n    public state: IFormState<TFields>;\n\n    constructor(private options: IFormOptions<TFields>) {\n        makeObservable(this);\n        this.fields = this.options.fields;\n        this.defaultValues = this.options.defaultValues;\n        this.state = this.getDefaultState();\n        this.onSubmit = this.options.onSubmit;\n        this.options.debounce = this.options.debounce || 300;\n\n        Object.keys(this.fields).forEach((field) => {\n            if (!this.fields[field].hooks) {\n                this.fields[field].hooks = {};\n            }\n        });\n\n        this.debouncedFieldValidators = Object.keys(this.fields).reduce(\n            (acc, key) => {\n                acc[key] = debounce(() => {\n                    this.validate(key);\n                }, this.options.debounce);\n\n                return acc;\n            },\n            {}\n        );\n    }\n\n    @action\n    public setFieldValue({\n        field,\n        value,\n        trusted = false,\n    }: {\n        field: string;\n        value: string;\n        trusted?: boolean;\n    }): void {\n        this.state.fields = { ...this.state.fields, [field]: value } as any;\n\n        if (!this.state.touched.has(field as keyof TFields) && trusted) {\n            this.state.touched = this.state.touched.add(field as keyof TFields);\n        }\n    }\n\n    @action\n    public setData(fields: FieldsState<TFields>): void {\n        this.state.fields = { ...this.state.fields, ...fields };\n    }\n\n    @action\n    public setFetchStatus(status: FetchStatus): void {\n        this.state.fetchStatus = status;\n    }\n\n    @action\n    private setSubmitted(submitted: boolean) {\n        this.state.submitted = submitted;\n    }\n\n    @action\n    public resetForm(params?: { clearFields: boolean }): void {\n        this.state.submitted = false;\n        this.state.valid = false;\n\n        this.state.errors = {};\n        this.state.fetchStatus = \"init\";\n        this.state.touched = new Set();\n\n        if (params && params.clearFields) {\n            this.state.fields = this.generateFields();\n        }\n    }\n\n    @action\n    public resetFields(fields: string[]): void {\n        this.state.fields = {\n            ...this.state.fields,\n            ...this.generateFields(fields),\n        };\n    }\n\n    @action\n    public setErrors(errors: ErrorsState): void {\n        const err = { ...errors };\n        const keys = Object.keys(err);\n\n        for (let i = 0, { length } = keys; i < length; i += 1) {\n            const key = keys[i];\n\n            if (\n                !Object.prototype.hasOwnProperty.call(this.state.fields, key) &&\n                key !== \"form\"\n            ) {\n                delete err[key];\n            }\n        }\n\n        this.state.errors = { ...this.state.errors, ...err };\n    }\n\n    public getAllFields(): FieldsState<TFields> {\n        return this.state.fields;\n    }\n\n    public getField(field: string): TFields[keyof TFields] {\n        return this.state.fields[field];\n    }\n\n    public getError(field: string): string {\n        const errors = this.state.errors[field] || [];\n        return errors.length ? errors[0] : \"\";\n    }\n\n    public isValid(validateOnly: string[] = []): boolean {\n        const errorKeys = Object.keys(this.state.errors);\n\n        return !errorKeys.some((field) =>\n            validateOnly.length !== 0\n                ? validateOnly.includes(field) &&\n                  this.state.errors[field].length !== 0\n                : this.state.errors[field].length !== 0\n        );\n    }\n\n    public getErrorsByValidateFields(fields: string[]): string[][] {\n        return fields.map((field) =>\n            this.validateField(field, this.getField(field), this.state.fields)\n        );\n    }\n\n    @computed\n    get loading(): boolean {\n        return this.state.fetchStatus === \"loading\";\n    }\n\n    public changeField({\n        field,\n        value,\n        trusted = false,\n        noInterceptors = false,\n    }): void {\n        if (this.fields[field].interceptor && !noInterceptors) {\n            // eslint-disable-next-line no-param-reassign\n            value = this.fields[field].interceptor({\n                ctx: this,\n                value,\n                fields: this.state.fields,\n                state: this.state,\n            });\n        }\n\n        this.setFieldValue({ field, value, trusted });\n\n        if (this.fields[field].hooks.updated) {\n            this.fields[field].hooks.updated({\n                ctx: this,\n                value,\n                fields: this.state.fields,\n                state: this.state,\n            });\n        }\n    }\n\n    public runInterceptor(payload = {}): void {\n        const { field } = payload as any;\n\n        if (!field) {\n            throw new Error(\"Field is required for runInterceptor action\");\n        }\n\n        const value = this.fields[field].interceptor({\n            ctx: this,\n            value: this.getField(field),\n            fields: this.state.fields,\n            state: this.state,\n        });\n\n        this.setFieldValue({ field, value });\n    }\n\n    public onBlur({ field, noValidate = false }): void {\n        if (noValidate) return;\n\n        this.debouncedFieldValidators[field]();\n    }\n\n    public async submit(params: {\n        payload?: any;\n        meta?: ISubmitMeta;\n    }): Promise<void> {\n        this.setFetchStatus(\"loading\");\n        const { meta, payload } = params || ({} as any);\n\n        if (!this.state.submitted) {\n            this.setSubmitted(true);\n        }\n\n        const validate = meta && \"validate\" in meta ? meta.validate : true;\n\n        if (validate) {\n            await this.validateAll({\n                validateOnly: meta && meta.validateOnly,\n            });\n        }\n\n        const isValid = this.isValid(meta && meta.validateOnly);\n\n        if (validate && !isValid) {\n            this.setFetchStatus(\"success\");\n            return;\n        }\n\n        await this.onSubmit(payload);\n        this.setFetchStatus(\"success\");\n    }\n\n    public async validateAll(params): Promise<void> {\n        const { validateOnly } = params || {};\n        const { fields } = this.state;\n\n        await Promise.all(\n            Object.keys(fields)\n                .filter((field) =>\n                    (validateOnly || []).length !== 0\n                        ? validateOnly.includes(field)\n                        : true\n                )\n                .map((field) => this.validate(field))\n        );\n    }\n\n    public async validate(field: string): Promise<void> {\n        const value = this.getField(field);\n        const errors = this.validateField(field, value, this.state.fields);\n\n        if (\n            typeof this.getError(field) === \"undefined\" &&\n            errors.length === 0\n        ) {\n            return;\n        }\n\n        this.setErrors({ [field]: errors, form: [] });\n    }\n\n    public clearErrors(field: string): void {\n        this.setErrors({\n            [field]: [],\n            form: [],\n        });\n    }\n\n    @action\n    private getDefaultState(): IFormState<TFields> {\n        return {\n            submitted: false,\n            valid: false,\n            fetchStatus: \"init\",\n            touched: new Set(),\n            errors: {},\n            fields: this.generateFields(),\n        };\n    }\n\n    private generateFields(fields?: string[]): FieldsState<TFields> {\n        const fieldsToGenerate = fields || Object.keys(this.fields);\n        const hash = {};\n\n        for (let i = 0, { length } = fieldsToGenerate; i < length; i += 1) {\n            const fieldName = fieldsToGenerate[i];\n            const field = this.fields[fieldName];\n\n            hash[fieldName] =\n                (this.defaultValues && this.defaultValues[fieldName]) ||\n                FormStore.getFieldDefaultValue(field.type);\n        }\n\n        return hash;\n    }\n\n    private static getFieldDefaultValue(\n        type: FieldTypes\n    ): string | number | boolean {\n        if (!type) {\n            throw new Error(\"Type is required\");\n        }\n\n        return (type as any)();\n    }\n\n    private validateField(\n        field: string,\n        value: any,\n        fields: FieldsState<TFields>\n    ): string[] {\n        const fieldConfig = this.fields[field];\n        const { validators } = fieldConfig || {};\n\n        if (!validators) {\n            return [];\n        }\n\n        for (let i = 0; i < validators.length; i += 1) {\n            const validator = validators[i];\n\n            if (typeof validator !== \"function\") {\n                throw new Error(\"Validator should be function.\");\n            }\n\n            let result;\n\n            try {\n                result = validator(value, fields);\n            } catch (e) {\n                console.error(e);\n            }\n\n            if (result) {\n                if (typeof result !== \"string\") {\n                    throw new Error(\n                        \"Validator should return string if invalid.\"\n                    );\n                }\n\n                return [result];\n            }\n        }\n\n        return [];\n    }\n}\n","/Users/eugene/Project/bigDance-react/src/utils/notification.tsx",[],"/Users/eugene/Project/bigDance-react/src/Components/Common/BaseInput/BaseInput.tsx",[],"/Users/eugene/Project/bigDance-react/src/Components/Common/BaseButton/BaseButton.tsx",[],"/Users/eugene/Project/bigDance-react/src/Pages/SettingsPage/SettingsPage.tsx",[],"/Users/eugene/Project/bigDance-react/src/stores/AuthStore/AuthStore.ts",["185","186","187","188"],"import lockr from \"lockr\";\nimport { makeAutoObservable } from \"mobx\";\nimport { api } from \"Services/config\";\nimport { FormStore, required } from \"stores/Form\";\nimport { JWT_TOKEN } from \"utils/constants\";\n\nimport AuthService from \"./service\";\n\nexport default class AuthStore implements ISAuth {\n    private readonly rootStore: IRootStore;\n\n    public jwtToken: string;\n\n    public userInfo: IRUserInfo;\n\n    public authForm: any;\n\n    constructor(rootStore: IRootStore) {\n        makeAutoObservable(this);\n        this.rootStore = rootStore;\n        this.jwtToken = lockr.get(JWT_TOKEN);\n        this.userInfo = {\n            role: \"customer\",\n            name: \"\",\n        };\n\n        this.initForms();\n    }\n\n    private setJwtToken(jwtToken): void {\n        this.jwtToken = jwtToken;\n    }\n\n    private setUserInfo(userInfo: IRUserInfo): void {\n        this.userInfo = userInfo;\n    }\n\n    get isLogined(): boolean {\n        return !!this.jwtToken;\n    }\n\n    get isAdmin(): boolean {\n        return this.userInfo.role === \"root\";\n    }\n\n    public getInfoUser(): void {\n        AuthService.getUserInfo().then((data) => {\n            this.setUserInfo(data);\n        });\n    }\n\n    public static logout(): void {\n        AuthService.logout().then(() => {\n            lockr.rm(JWT_TOKEN);\n            window.location.reload();\n        });\n    }\n\n    private submitLogin(): void {\n        AuthService.login(this.authForm.getAllFields()).then(\n            ({ access_token }) => {\n                lockr.set(JWT_TOKEN, access_token);\n                api.setHeader(\"Authorization\", `Bearer ${access_token}`);\n                this.setJwtToken(access_token);\n            }\n        );\n    }\n\n    private initForms(): void {\n        const self = this;\n\n        this.authForm = new FormStore({\n            fields: {\n                name: {\n                    type: String,\n                    validators: [required()],\n                },\n                password: {\n                    type: String,\n                    validators: [required()],\n                },\n            },\n            async onSubmit() {\n                await self.submitLogin();\n            },\n        });\n    }\n}\n","/Users/eugene/Project/bigDance-react/src/stores/AuthStore/service.ts",[],"/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/SettingsStore.ts",["189","190"],"import { makeAutoObservable } from \"mobx\";\nimport { fromArrayToObject } from \"utils/helpers\";\n\nimport { getVenueForm } from \"./forms\";\nimport SettingsService from \"./service\";\n\nexport default class SettingsStore implements ISSettings {\n    private readonly rootStore: IRootStore;\n\n    public venueForm: any;\n\n    public venues: Hash<IVenue>;\n\n    public rooms: IRRooms;\n\n    constructor(rootStore: IRootStore) {\n        makeAutoObservable(this);\n        this.rootStore = rootStore;\n        this.venues = {};\n        this.rooms = [];\n        this.venueForm = getVenueForm(this);\n    }\n\n    private setVenues(venues: Hash<IVenue>) {\n        this.venues = venues;\n    }\n\n    private setRooms(rooms: IRRooms) {\n        this.rooms = rooms;\n    }\n\n    public getVenues(): void {\n        SettingsService.getVenues().then((venues) => {\n            this.setVenues(fromArrayToObject(venues));\n        });\n    }\n\n    public getRooms(): void {\n        SettingsService.getRooms().then((rooms) => {\n            this.setRooms(rooms);\n        });\n    }\n\n    private submitEditVenue(): void {\n        console.log(this.venues);\n    }\n}\n","/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/service.ts",[],"/Users/eugene/Project/bigDance-react/src/utils/helpers.ts",[],"/Users/eugene/Project/bigDance-react/src/stores/SettingsStore/forms.ts",["191","192"],"import { FormStore, required } from \"../Form\";\n\nexport const getVenueForm = (self) => {\n    return new FormStore({\n        fields: {\n            name: {\n                type: String,\n                validators: [required()],\n            },\n            location: {\n                type: String,\n                validators: [required()],\n            },\n            color: {\n                type: String,\n                validators: [required()],\n            },\n            time: {\n                type: String,\n                validators: [required()],\n            },\n            interval: {\n                type: String,\n                validators: [required()],\n            },\n            rooms: {\n                type: Object,\n            },\n        },\n        async onSubmit() {\n            await self.submitEditVenue();\n        },\n    });\n};\n","/Users/eugene/Project/bigDance-react/src/Components/Common/BaseTabs/BaseTabs.tsx",["193","194"],"import Box from \"@material-ui/core/Box\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nimport { BaseTabsProps, TabPanelProps } from \"./types\";\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index } = props;\n\n    return (\n        <div hidden={value !== index}>\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n};\n\nconst BaseTabs: React.FC<BaseTabsProps> = ({ tabs }) => {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (_, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className=\"pt-4\">\n            <Tabs\n                value={value}\n                centered\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n            >\n                {tabs.map((item, index) => (\n                    <Tab key={index} label={item.label} />\n                ))}\n            </Tabs>\n            {tabs.map((item, index) => (\n                <TabPanel key={index} value={value} index={index}>\n                    {item.value}\n                </TabPanel>\n            ))}\n        </div>\n    );\n};\n\nexport default BaseTabs;\n","/Users/eugene/Project/bigDance-react/src/Pages/SettingsPage/components/CardsVenue/CardsVenue.tsx",["195","196","197"],"/Users/eugene/Project/bigDance-react/src/Components/Layout/NotificationLayout/NotificationLayout.tsx",[],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":11,"column":30,"nodeType":"210","messageId":"211","endLine":11,"endColumn":47},{"ruleId":"208","severity":1,"message":"212","line":11,"column":31,"nodeType":"213","messageId":"214","endLine":11,"endColumn":43},{"ruleId":"208","severity":1,"message":"209","line":18,"column":25,"nodeType":"210","messageId":"211","endLine":18,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":18,"column":8,"nodeType":"217","endLine":18,"endColumn":19,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":5,"column":69,"nodeType":"221","messageId":"222","endLine":5,"endColumn":72,"suggestions":"223"},{"ruleId":"219","severity":1,"message":"220","line":10,"column":45,"nodeType":"221","messageId":"222","endLine":10,"endColumn":48,"suggestions":"224"},{"ruleId":"219","severity":1,"message":"220","line":26,"column":4,"nodeType":"221","messageId":"222","endLine":26,"endColumn":7,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":50,"column":24,"nodeType":"228","messageId":"229","endLine":50,"endColumn":35,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":55,"column":30,"nodeType":"233","messageId":"234","endLine":55,"endColumn":31},{"ruleId":"231","severity":1,"message":"232","line":58,"column":49,"nodeType":"233","messageId":"234","endLine":58,"endColumn":50},{"ruleId":"235","severity":1,"message":"236","line":39,"column":29,"nodeType":"237","endLine":43,"endColumn":30},{"ruleId":"238","severity":1,"message":"239","line":39,"column":29,"nodeType":"237","endLine":43,"endColumn":30},{"ruleId":"219","severity":1,"message":"220","line":16,"column":22,"nodeType":"221","messageId":"222","endLine":16,"endColumn":25,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":47,"column":15,"nodeType":"233","messageId":"243","endLine":47,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":68,"column":16,"nodeType":"233","messageId":"246","endLine":68,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":71,"column":58,"nodeType":"233","messageId":"246","endLine":71,"endColumn":70},{"ruleId":"208","severity":1,"message":"247","line":8,"column":9,"nodeType":"233","messageId":"248","endLine":8,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":8,"column":19,"nodeType":"221","messageId":"222","endLine":8,"endColumn":22,"suggestions":"249"},{"ruleId":"219","severity":1,"message":"220","line":13,"column":42,"nodeType":"221","messageId":"222","endLine":13,"endColumn":45,"suggestions":"250"},{"ruleId":"219","severity":1,"message":"220","line":19,"column":15,"nodeType":"221","messageId":"222","endLine":19,"endColumn":18,"suggestions":"251"},{"ruleId":"208","severity":1,"message":"247","line":20,"column":9,"nodeType":"233","messageId":"248","endLine":20,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":20,"column":19,"nodeType":"221","messageId":"222","endLine":20,"endColumn":22,"suggestions":"252"},{"ruleId":"219","severity":1,"message":"220","line":25,"column":42,"nodeType":"221","messageId":"222","endLine":25,"endColumn":45,"suggestions":"253"},{"ruleId":"208","severity":1,"message":"209","line":3,"column":44,"nodeType":"210","messageId":"211","endLine":3,"endColumn":62},{"ruleId":"208","severity":1,"message":"254","line":3,"column":45,"nodeType":"233","messageId":"255","endLine":3,"endColumn":50},{"ruleId":"208","severity":1,"message":"256","line":3,"column":52,"nodeType":"233","messageId":"255","endLine":3,"endColumn":58},{"ruleId":"257","severity":1,"message":"258","line":7,"column":67,"nodeType":"210","messageId":"259"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":62,"nodeType":"210","messageId":"259"},{"ruleId":"257","severity":1,"message":"258","line":20,"column":56,"nodeType":"210","messageId":"259"},{"ruleId":"219","severity":1,"message":"220","line":15,"column":34,"nodeType":"221","messageId":"222","endLine":15,"endColumn":37,"suggestions":"260"},{"ruleId":"219","severity":1,"message":"220","line":20,"column":60,"nodeType":"221","messageId":"222","endLine":20,"endColumn":63,"suggestions":"261"},{"ruleId":"219","severity":1,"message":"220","line":22,"column":32,"nodeType":"221","messageId":"222","endLine":22,"endColumn":35,"suggestions":"262"},{"ruleId":"219","severity":1,"message":"220","line":63,"column":73,"nodeType":"221","messageId":"222","endLine":63,"endColumn":76,"suggestions":"263"},{"ruleId":"208","severity":1,"message":"212","line":161,"column":24,"nodeType":"213","messageId":"214","endLine":166,"endColumn":6},{"ruleId":"219","severity":1,"message":"220","line":190,"column":38,"nodeType":"221","messageId":"222","endLine":190,"endColumn":41,"suggestions":"264"},{"ruleId":"208","severity":1,"message":"212","line":206,"column":19,"nodeType":"213","messageId":"214","endLine":206,"endColumn":48},{"ruleId":"219","severity":1,"message":"220","line":213,"column":19,"nodeType":"221","messageId":"222","endLine":213,"endColumn":22,"suggestions":"265"},{"ruleId":"219","severity":1,"message":"220","line":217,"column":52,"nodeType":"221","messageId":"222","endLine":217,"endColumn":55,"suggestions":"266"},{"ruleId":"208","severity":1,"message":"267","line":242,"column":30,"nodeType":"233","messageId":"255","endLine":242,"endColumn":36},{"ruleId":"219","severity":1,"message":"220","line":313,"column":25,"nodeType":"221","messageId":"222","endLine":313,"endColumn":28,"suggestions":"268"},{"ruleId":"219","severity":1,"message":"220","line":318,"column":16,"nodeType":"221","messageId":"222","endLine":318,"endColumn":19,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":340,"column":17,"nodeType":"272","messageId":"273","endLine":340,"endColumn":30},{"ruleId":"219","severity":1,"message":"220","line":16,"column":22,"nodeType":"221","messageId":"222","endLine":16,"endColumn":25,"suggestions":"274"},{"ruleId":"244","severity":1,"message":"245","line":61,"column":16,"nodeType":"233","messageId":"246","endLine":61,"endColumn":28},{"ruleId":"244","severity":1,"message":"245","line":63,"column":58,"nodeType":"233","messageId":"246","endLine":63,"endColumn":70},{"ruleId":"241","severity":1,"message":"242","line":70,"column":15,"nodeType":"233","messageId":"243","endLine":70,"endColumn":19},{"ruleId":"219","severity":1,"message":"220","line":10,"column":23,"nodeType":"221","messageId":"222","endLine":10,"endColumn":26,"suggestions":"275"},{"ruleId":"270","severity":1,"message":"271","line":45,"column":9,"nodeType":"272","messageId":"273","endLine":45,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":3,"column":29,"nodeType":"210","messageId":"211","endLine":3,"endColumn":38},{"ruleId":"208","severity":1,"message":"276","line":3,"column":30,"nodeType":"233","messageId":"255","endLine":3,"endColumn":34},{"ruleId":"231","severity":1,"message":"232","line":40,"column":31,"nodeType":"233","messageId":"234","endLine":40,"endColumn":36},{"ruleId":"231","severity":1,"message":"232","line":44,"column":32,"nodeType":"233","messageId":"234","endLine":44,"endColumn":37},{"ruleId":"270","severity":1,"message":"271","line":18,"column":5,"nodeType":"272","messageId":"273","endLine":18,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":23,"column":27,"nodeType":"233","messageId":"234","endLine":23,"endColumn":32},{"ruleId":"231","severity":1,"message":"232","line":38,"column":31,"nodeType":"233","messageId":"234","endLine":38,"endColumn":36},"lines-around-directive",["277"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rootStore'. Either include it or remove the dependency array.","ArrayExpression",["278"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["279","280"],["281","282"],["283","284"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["285"],"react/no-array-index-key","Do not use Array index in keys","Identifier","noArrayIndex","jsx-a11y/no-static-element-interactions","Static HTML elements with event handlers require a role.","JSXOpeningElement","jsx-a11y/click-events-have-key-events","Visible, non-interactive elements with click handlers must have at least one keyboard listener.",["286","287"],"@typescript-eslint/no-this-alias","Unexpected aliasing of 'this' to local variable.","thisAssignment","camelcase","Identifier 'access_token' is not in camel case.","notCamelCase","Argument 'request' should be typed with a non-any type.","anyTypedArg",["288","289"],["290","291"],["292","293"],["294","295"],["296","297"],"Argument 'value' should be typed.","missingArgType","Argument 'fields' should be typed.","consistent-return","Expected to return a value at the end of arrow function.","missingReturn",["298","299"],["300","301"],["302","303"],["304","305"],["306","307"],["308","309"],["310","311"],"Argument 'params' should be typed.",["312","313"],["314","315"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["316","317"],["318","319"],"Argument 'self' should be typed.","padding-line-between-statements",{"desc":"320","fix":"321"},{"messageId":"322","fix":"323","desc":"324"},{"messageId":"325","fix":"326","desc":"327"},{"messageId":"322","fix":"328","desc":"324"},{"messageId":"325","fix":"329","desc":"327"},{"messageId":"322","fix":"330","desc":"324"},{"messageId":"325","fix":"331","desc":"327"},{"messageId":"332","fix":"333","desc":"334"},{"messageId":"322","fix":"335","desc":"324"},{"messageId":"325","fix":"336","desc":"327"},{"messageId":"322","fix":"337","desc":"324"},{"messageId":"325","fix":"338","desc":"327"},{"messageId":"322","fix":"339","desc":"324"},{"messageId":"325","fix":"340","desc":"327"},{"messageId":"322","fix":"341","desc":"324"},{"messageId":"325","fix":"342","desc":"327"},{"messageId":"322","fix":"343","desc":"324"},{"messageId":"325","fix":"344","desc":"327"},{"messageId":"322","fix":"345","desc":"324"},{"messageId":"325","fix":"346","desc":"327"},{"messageId":"322","fix":"347","desc":"324"},{"messageId":"325","fix":"348","desc":"327"},{"messageId":"322","fix":"349","desc":"324"},{"messageId":"325","fix":"350","desc":"327"},{"messageId":"322","fix":"351","desc":"324"},{"messageId":"325","fix":"352","desc":"327"},{"messageId":"322","fix":"353","desc":"324"},{"messageId":"325","fix":"354","desc":"327"},{"messageId":"322","fix":"355","desc":"324"},{"messageId":"325","fix":"356","desc":"327"},{"messageId":"322","fix":"357","desc":"324"},{"messageId":"325","fix":"358","desc":"327"},{"messageId":"322","fix":"359","desc":"324"},{"messageId":"325","fix":"360","desc":"327"},{"messageId":"322","fix":"361","desc":"324"},{"messageId":"325","fix":"362","desc":"327"},{"messageId":"322","fix":"363","desc":"324"},{"messageId":"325","fix":"364","desc":"327"},{"messageId":"322","fix":"365","desc":"324"},{"messageId":"325","fix":"366","desc":"327"},{"messageId":"322","fix":"367","desc":"324"},{"messageId":"325","fix":"368","desc":"327"},"Update the dependencies array to be: [isLogined, rootStore]",{"range":"369","text":"370"},"suggestUnknown",{"range":"371","text":"372"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"371","text":"373"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"374","text":"372"},{"range":"374","text":"373"},{"range":"375","text":"372"},{"range":"375","text":"373"},"suggestOptionalChain",{"range":"376","text":"377"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"378","text":"372"},{"range":"378","text":"373"},{"range":"379","text":"372"},{"range":"379","text":"373"},{"range":"380","text":"372"},{"range":"380","text":"373"},{"range":"381","text":"372"},{"range":"381","text":"373"},{"range":"382","text":"372"},{"range":"382","text":"373"},{"range":"383","text":"372"},{"range":"383","text":"373"},{"range":"384","text":"372"},{"range":"384","text":"373"},{"range":"385","text":"372"},{"range":"385","text":"373"},{"range":"386","text":"372"},{"range":"386","text":"373"},{"range":"387","text":"372"},{"range":"387","text":"373"},{"range":"388","text":"372"},{"range":"388","text":"373"},{"range":"389","text":"372"},{"range":"389","text":"373"},{"range":"390","text":"372"},{"range":"390","text":"373"},{"range":"391","text":"372"},{"range":"391","text":"373"},{"range":"392","text":"372"},{"range":"392","text":"373"},{"range":"393","text":"372"},{"range":"393","text":"373"},{"range":"394","text":"372"},{"range":"394","text":"373"},[617,628],"[isLogined, rootStore]",[192,195],"unknown","never",[341,344],[637,640],[1329,1330],"?",[429,432],[186,189],[338,341],[499,502],[527,530],[685,688],[307,310],[488,491],[526,529],[1681,1684],[5190,5193],[5757,5760],[5905,5908],[8511,8514],[8591,8594],[425,428],[303,306]]